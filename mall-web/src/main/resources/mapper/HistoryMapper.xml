<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jiumao.wechatMall.dao.HistoryDao">
    <!-- History的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_History_Map" type="org.jiumao.wechatMall.entity.History">
        <id column="id" property="id" />
        <result column="begin_time" property="beginTime" />
        <result column="end_time" property="endTime" />
        <result column="good_id" property="goodId" />
        <result column="sale_num" property="saleNum" />
        <result column="classification" property="classification" />
        <result column="total_price" property="totalPrice" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:history的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="history_Column">
        history.id as id
        ,history.begin_time as begin_time
        ,history.end_time as end_time
        ,history.good_id as good_id
        ,history.sale_num as sale_num
        ,history.classification as classification
        ,history.total_price as total_price
    </sql>

    <!--获得类名为:History对应的数据库表的数据总行数 -->
    <select id="getHistoryRowCount" parameterType="org.jiumao.wechatMall.common.Assist" resultType="java.lang.Long">
        select count(id) from history
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:History对应数据库中表的数据集合 -->
    <select id="selectHistory" parameterType="org.jiumao.wechatMall.common.Assist"  resultMap="result_History_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="history_Column" /> 
            </otherwise>
        </choose>
        from history
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM history
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=history.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个History对象,以参数History对象中不为空的属性作为条件进行查询-->
    <select id="selectHistoryByObj" parameterType="org.jiumao.wechatMall.entity.History" resultMap="result_History_Map">
        select 
            <include refid="history_Column" /> 
        from history
        <where>
            <if test="totalPrice != null "> and history.total_price = #{totalPrice}</if>
            <if test="classification != null "> and history.classification = #{classification}</if>
            <if test="saleNum != null "> and history.sale_num = #{saleNum}</if>
            <if test="goodId != null "> and history.good_id = #{goodId}</if>
            <if test="endTime != null "> and history.end_time = #{endTime}</if>
            <if test="beginTime != null "> and history.begin_time = #{beginTime}</if>
            <if test="id != null "> and history.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过History的id获得对应数据库中表的数据对象-->
    <select id="selectHistoryById" parameterType="java.lang.Object" resultMap="result_History_Map">
        select 
            <include refid="history_Column" /> 
        from history
        where history.id = #{id}
    </select> 

    <!-- 将History插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertHistory" parameterType="org.jiumao.wechatMall.entity.History">
        insert into history(id,begin_time,end_time,good_id,sale_num,classification,total_price) 
        values(#{id},#{beginTime},#{endTime},#{goodId},#{saleNum},#{classification},#{totalPrice})
    </insert>

    <!-- 将History中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyHistory" parameterType="org.jiumao.wechatMall.entity.History">
        insert into history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="beginTime != null">begin_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="goodId != null">good_id,</if>
            <if test="saleNum != null">sale_num,</if>
            <if test="classification != null">classification,</if>
            <if test="totalPrice != null">total_price,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="beginTime != null"> #{beginTime},</if>
            <if test="endTime != null"> #{endTime},</if>
            <if test="goodId != null"> #{goodId},</if>
            <if test="saleNum != null"> #{saleNum},</if>
            <if test="classification != null"> #{classification},</if>
            <if test="totalPrice != null"> #{totalPrice},</if>
        </trim>
    </insert>

    <!-- 通过History的id将数据库表中对应的数据删除-->
    <delete id="deleteHistoryById" parameterType="java.lang.Object">
        delete from history
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将History对应的数据库表的数据删除-->
    <delete id="deleteHistory" parameterType="org.jiumao.wechatMall.common.Assist">
        delete from history
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过History的id将History的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateHistoryById" parameterType="org.jiumao.wechatMall.entity.History">
        update history set
            begin_time=#{beginTime}
            ,end_time=#{endTime}
            ,good_id=#{goodId}
            ,sale_num=#{saleNum}
            ,classification=#{classification}
            ,total_price=#{totalPrice}
        where id=#{id}
    </update>

    <!-- 通过History的id将History中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyHistoryById" parameterType="org.jiumao.wechatMall.entity.History">
        update history
        <set>
            <if test="beginTime != null">
                begin_time=#{beginTime},
            </if>
            <if test="endTime != null">
                end_time=#{endTime},
            </if>
            <if test="goodId != null">
                good_id=#{goodId},
            </if>
            <if test="saleNum != null">
                sale_num=#{saleNum},
            </if>
            <if test="classification != null">
                classification=#{classification},
            </if>
            <if test="totalPrice != null">
                total_price=#{totalPrice},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将History中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateHistory" parameterType="map">
        update history
        <set>
                id=#{enti.id},
                begin_time=#{enti.beginTime},
                end_time=#{enti.endTime},
                good_id=#{enti.goodId},
                sale_num=#{enti.saleNum},
                classification=#{enti.classification},
                total_price=#{enti.totalPrice},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将History中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyHistory" parameterType="map">
        update history
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.beginTime != null">
                begin_time=#{enti.beginTime},
            </if>
            <if test="enti.endTime != null">
                end_time=#{enti.endTime},
            </if>
            <if test="enti.goodId != null">
                good_id=#{enti.goodId},
            </if>
            <if test="enti.saleNum != null">
                sale_num=#{enti.saleNum},
            </if>
            <if test="enti.classification != null">
                classification=#{enti.classification},
            </if>
            <if test="enti.totalPrice != null">
                total_price=#{enti.totalPrice},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>