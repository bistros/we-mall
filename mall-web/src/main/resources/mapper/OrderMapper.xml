<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jiumao.wechatMall.dao.OrderDao">
    <!-- Order的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Order_Map" type="org.jiumao.wechatMall.entity.Order">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="order_id" property="orderId" />
        <result column="creat_time" property="creatTime" />
        <result column="status" property="status" />
        <result column="order_good_id" property="orderGoodId" />
        <result column="total_price" property="totalPrice" />
        <result column="num" property="num" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:order的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="order_Column">
        order.id as id
        ,order.user_id as user_id
        ,order.order_id as order_id
        ,order.creat_time as creat_time
        ,order.status as status
        ,order.order_good_id as order_good_id
        ,order.total_price as total_price
        ,order.num as num
    </sql>

    <!--获得类名为:Order对应的数据库表的数据总行数 -->
    <select id="getOrderRowCount" parameterType="org.jiumao.wechatMall.common.Assist" resultType="java.lang.Long">
        select count(id) from order
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Order对应数据库中表的数据集合 -->
    <select id="selectOrder" parameterType="org.jiumao.wechatMall.common.Assist"  resultMap="result_Order_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="order_Column" /> 
            </otherwise>
        </choose>
        from order
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM order
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=order.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Order对象,以参数Order对象中不为空的属性作为条件进行查询-->
    <select id="selectOrderByObj" parameterType="org.jiumao.wechatMall.entity.Order" resultMap="result_Order_Map">
        select 
            <include refid="order_Column" /> 
        from order
        <where>
            <if test="num != null "> and order.num = #{num}</if>
            <if test="totalPrice != null "> and order.total_price = #{totalPrice}</if>
            <if test="orderGoodId != null "> and order.order_good_id = #{orderGoodId}</if>
            <if test="status != null "> and order.status = #{status}</if>
            <if test="creatTime != null "> and order.creat_time = #{creatTime}</if>
            <if test="orderId != null "> and order.order_id = #{orderId}</if>
            <if test="userId != null "> and order.user_id = #{userId}</if>
            <if test="id != null "> and order.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Order的id获得对应数据库中表的数据对象-->
    <select id="selectOrderById" parameterType="java.lang.Object" resultMap="result_Order_Map">
        select 
            <include refid="order_Column" /> 
        from order
        where order.id = #{id}
    </select> 

    <!-- 将Order插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertOrder" parameterType="org.jiumao.wechatMall.entity.Order">
        insert into order(id,user_id,order_id,creat_time,status,order_good_id,total_price,num) 
        values(#{id},#{userId},#{orderId},#{creatTime},#{status},#{orderGoodId},#{totalPrice},#{num})
    </insert>

    <!-- 将Order中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyOrder" parameterType="org.jiumao.wechatMall.entity.Order">
        insert into order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="userId != null">user_id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="creatTime != null">creat_time,</if>
            <if test="status != null">status,</if>
            <if test="orderGoodId != null">order_good_id,</if>
            <if test="totalPrice != null">total_price,</if>
            <if test="num != null">num,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="userId != null"> #{userId},</if>
            <if test="orderId != null"> #{orderId},</if>
            <if test="creatTime != null"> #{creatTime},</if>
            <if test="status != null"> #{status},</if>
            <if test="orderGoodId != null"> #{orderGoodId},</if>
            <if test="totalPrice != null"> #{totalPrice},</if>
            <if test="num != null"> #{num},</if>
        </trim>
    </insert>

    <!-- 通过Order的id将数据库表中对应的数据删除-->
    <delete id="deleteOrderById" parameterType="java.lang.Object">
        delete from order
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Order对应的数据库表的数据删除-->
    <delete id="deleteOrder" parameterType="org.jiumao.wechatMall.common.Assist">
        delete from order
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Order的id将Order的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateOrderById" parameterType="org.jiumao.wechatMall.entity.Order">
        update order set
            user_id=#{userId}
            ,order_id=#{orderId}
            ,creat_time=#{creatTime}
            ,status=#{status}
            ,order_good_id=#{orderGoodId}
            ,total_price=#{totalPrice}
            ,num=#{num}
        where id=#{id}
    </update>

    <!-- 通过Order的id将Order中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyOrderById" parameterType="org.jiumao.wechatMall.entity.Order">
        update order
        <set>
            <if test="userId != null">
                user_id=#{userId},
            </if>
            <if test="orderId != null">
                order_id=#{orderId},
            </if>
            <if test="creatTime != null">
                creat_time=#{creatTime},
            </if>
            <if test="status != null">
                status=#{status},
            </if>
            <if test="orderGoodId != null">
                order_good_id=#{orderGoodId},
            </if>
            <if test="totalPrice != null">
                total_price=#{totalPrice},
            </if>
            <if test="num != null">
                num=#{num},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Order中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateOrder" parameterType="map">
        update order
        <set>
                id=#{enti.id},
                user_id=#{enti.userId},
                order_id=#{enti.orderId},
                creat_time=#{enti.creatTime},
                status=#{enti.status},
                order_good_id=#{enti.orderGoodId},
                total_price=#{enti.totalPrice},
                num=#{enti.num},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Order中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyOrder" parameterType="map">
        update order
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.userId != null">
                user_id=#{enti.userId},
            </if>
            <if test="enti.orderId != null">
                order_id=#{enti.orderId},
            </if>
            <if test="enti.creatTime != null">
                creat_time=#{enti.creatTime},
            </if>
            <if test="enti.status != null">
                status=#{enti.status},
            </if>
            <if test="enti.orderGoodId != null">
                order_good_id=#{enti.orderGoodId},
            </if>
            <if test="enti.totalPrice != null">
                total_price=#{enti.totalPrice},
            </if>
            <if test="enti.num != null">
                num=#{enti.num},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>