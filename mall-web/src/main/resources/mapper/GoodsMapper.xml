<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jiumao.wechatMall.dao.GoodsDao">
    <!-- Goods的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Goods_Map" type="org.jiumao.wechatMall.entity.Goods">
        <id column="id" property="id" />
        <result column="good_id" property="goodId" />
        <result column="name" property="name" />
        <result column="price" property="price" />
        <result column="nowsale" property="nowsale" />
        <result column="num" property="num" />
        <result column="sale_num" property="saleNum" />
        <result column="warning" property="warning" />
        <result column="detail" property="detail" />
        <result column="classification_id" property="classificationId" />
        <result column="pictures" property="pictures" />
        <result column="status" property="status" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:goods的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="goods_Column">
        goods.id as id
        ,goods.good_id as good_id
        ,goods.name as name
        ,goods.price as price
        ,goods.nowsale as nowsale
        ,goods.num as num
        ,goods.sale_num as sale_num
        ,goods.warning as warning
        ,goods.detail as detail
        ,goods.classification_id as classification_id
        ,goods.pictures as pictures
        ,goods.status as status
    </sql>

    <!--获得类名为:Goods对应的数据库表的数据总行数 -->
    <select id="getGoodsRowCount" parameterType="org.jiumao.wechatMall.common.Assist" resultType="java.lang.Long">
        select count(id) from goods
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Goods对应数据库中表的数据集合 -->
    <select id="selectGoods" parameterType="org.jiumao.wechatMall.common.Assist"  resultMap="result_Goods_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="goods_Column" /> 
            </otherwise>
        </choose>
        from goods
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM goods
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=goods.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Goods对象,以参数Goods对象中不为空的属性作为条件进行查询-->
    <select id="selectGoodsByObj" parameterType="org.jiumao.wechatMall.entity.Goods" resultMap="result_Goods_Map">
        select 
            <include refid="goods_Column" /> 
        from goods
        <where>
            <if test="status != null "> and goods.status = #{status}</if>
            <if test="pictures != null "> and goods.pictures = #{pictures}</if>
            <if test="classificationId != null "> and goods.classification_id = #{classificationId}</if>
            <if test="detail != null "> and goods.detail = #{detail}</if>
            <if test="warning != null "> and goods.warning = #{warning}</if>
            <if test="saleNum != null "> and goods.sale_num = #{saleNum}</if>
            <if test="num != null "> and goods.num = #{num}</if>
            <if test="nowsale != null "> and goods.nowsale = #{nowsale}</if>
            <if test="price != null "> and goods.price = #{price}</if>
            <if test="name != null "> and goods.name = #{name}</if>
            <if test="goodId != null "> and goods.good_id = #{goodId}</if>
            <if test="id != null "> and goods.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Goods的id获得对应数据库中表的数据对象-->
    <select id="selectGoodsById" parameterType="java.lang.Object" resultMap="result_Goods_Map">
        select 
            <include refid="goods_Column" /> 
        from goods
        where goods.id = #{id}
    </select> 

    <!-- 将Goods插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertGoods" parameterType="org.jiumao.wechatMall.entity.Goods">
        insert into goods(id,good_id,name,price,nowsale,num,sale_num,warning,detail,classification_id,pictures,status) 
        values(#{id},#{goodId},#{name},#{price},#{nowsale},#{num},#{saleNum},#{warning},#{detail},#{classificationId},#{pictures},#{status})
    </insert>

    <!-- 将Goods中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyGoods" parameterType="org.jiumao.wechatMall.entity.Goods">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="goodId != null">good_id,</if>
            <if test="name != null">name,</if>
            <if test="price != null">price,</if>
            <if test="nowsale != null">nowsale,</if>
            <if test="num != null">num,</if>
            <if test="saleNum != null">sale_num,</if>
            <if test="warning != null">warning,</if>
            <if test="detail != null">detail,</if>
            <if test="classificationId != null">classification_id,</if>
            <if test="pictures != null">pictures,</if>
            <if test="status != null">status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="goodId != null"> #{goodId},</if>
            <if test="name != null"> #{name},</if>
            <if test="price != null"> #{price},</if>
            <if test="nowsale != null"> #{nowsale},</if>
            <if test="num != null"> #{num},</if>
            <if test="saleNum != null"> #{saleNum},</if>
            <if test="warning != null"> #{warning},</if>
            <if test="detail != null"> #{detail},</if>
            <if test="classificationId != null"> #{classificationId},</if>
            <if test="pictures != null"> #{pictures},</if>
            <if test="status != null"> #{status},</if>
        </trim>
    </insert>

    <!-- 通过Goods的id将数据库表中对应的数据删除-->
    <delete id="deleteGoodsById" parameterType="java.lang.Object">
        delete from goods
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Goods对应的数据库表的数据删除-->
    <delete id="deleteGoods" parameterType="org.jiumao.wechatMall.common.Assist">
        delete from goods
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Goods的id将Goods的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateGoodsById" parameterType="org.jiumao.wechatMall.entity.Goods">
        update goods set
            good_id=#{goodId}
            ,name=#{name}
            ,price=#{price}
            ,nowsale=#{nowsale}
            ,num=#{num}
            ,sale_num=#{saleNum}
            ,warning=#{warning}
            ,detail=#{detail}
            ,classification_id=#{classificationId}
            ,pictures=#{pictures}
            ,status=#{status}
        where id=#{id}
    </update>

    <!-- 通过Goods的id将Goods中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyGoodsById" parameterType="org.jiumao.wechatMall.entity.Goods">
        update goods
        <set>
            <if test="goodId != null">
                good_id=#{goodId},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="price != null">
                price=#{price},
            </if>
            <if test="nowsale != null">
                nowsale=#{nowsale},
            </if>
            <if test="num != null">
                num=#{num},
            </if>
            <if test="saleNum != null">
                sale_num=#{saleNum},
            </if>
            <if test="warning != null">
                warning=#{warning},
            </if>
            <if test="detail != null">
                detail=#{detail},
            </if>
            <if test="classificationId != null">
                classification_id=#{classificationId},
            </if>
            <if test="pictures != null">
                pictures=#{pictures},
            </if>
            <if test="status != null">
                status=#{status},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Goods中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateGoods" parameterType="map">
        update goods
        <set>
                id=#{enti.id},
                good_id=#{enti.goodId},
                name=#{enti.name},
                price=#{enti.price},
                nowsale=#{enti.nowsale},
                num=#{enti.num},
                sale_num=#{enti.saleNum},
                warning=#{enti.warning},
                detail=#{enti.detail},
                classification_id=#{enti.classificationId},
                pictures=#{enti.pictures},
                status=#{enti.status},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Goods中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyGoods" parameterType="map">
        update goods
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.goodId != null">
                good_id=#{enti.goodId},
            </if>
            <if test="enti.name != null">
                name=#{enti.name},
            </if>
            <if test="enti.price != null">
                price=#{enti.price},
            </if>
            <if test="enti.nowsale != null">
                nowsale=#{enti.nowsale},
            </if>
            <if test="enti.num != null">
                num=#{enti.num},
            </if>
            <if test="enti.saleNum != null">
                sale_num=#{enti.saleNum},
            </if>
            <if test="enti.warning != null">
                warning=#{enti.warning},
            </if>
            <if test="enti.detail != null">
                detail=#{enti.detail},
            </if>
            <if test="enti.classificationId != null">
                classification_id=#{enti.classificationId},
            </if>
            <if test="enti.pictures != null">
                pictures=#{enti.pictures},
            </if>
            <if test="enti.status != null">
                status=#{enti.status},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>