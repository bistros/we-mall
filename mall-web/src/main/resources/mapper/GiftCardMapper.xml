<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jiumao.wechatMall.dao.GiftCardDao">
    <!-- GiftCard的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_GiftCard_Map" type="org.jiumao.wechatMall.entity.GiftCard">
        <id column="id" property="id" />
        <result column="balance" property="balance" />
        <result column="type" property="type" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="other" property="other" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:gift_card的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="gift_card_Column">
        gift_card.id as id
        ,gift_card.balance as balance
        ,gift_card.type as type
        ,gift_card.status as status
        ,gift_card.create_time as create_time
        ,gift_card.other as other
    </sql>

    <!--获得类名为:GiftCard对应的数据库表的数据总行数 -->
    <select id="getGiftCardRowCount" parameterType="org.jiumao.wechatMall.common.Assist" resultType="java.lang.Long">
        select count(id) from gift_card
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:GiftCard对应数据库中表的数据集合 -->
    <select id="selectGiftCard" parameterType="org.jiumao.wechatMall.common.Assist"  resultMap="result_GiftCard_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="gift_card_Column" /> 
            </otherwise>
        </choose>
        from gift_card
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM gift_card
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=gift_card.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个GiftCard对象,以参数GiftCard对象中不为空的属性作为条件进行查询-->
    <select id="selectGiftCardByObj" parameterType="org.jiumao.wechatMall.entity.GiftCard" resultMap="result_GiftCard_Map">
        select 
            <include refid="gift_card_Column" /> 
        from gift_card
        <where>
            <if test="other != null "> and gift_card.other = #{other}</if>
            <if test="createTime != null "> and gift_card.create_time = #{createTime}</if>
            <if test="status != null "> and gift_card.status = #{status}</if>
            <if test="type != null "> and gift_card.type = #{type}</if>
            <if test="balance != null "> and gift_card.balance = #{balance}</if>
            <if test="id != null "> and gift_card.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过GiftCard的id获得对应数据库中表的数据对象-->
    <select id="selectGiftCardById" parameterType="java.lang.Long" resultMap="result_GiftCard_Map">
        select 
            <include refid="gift_card_Column" /> 
        from gift_card
        where gift_card.id = #{id}
    </select> 

    <!-- 将GiftCard插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertGiftCard" parameterType="org.jiumao.wechatMall.entity.GiftCard">
        insert into gift_card(id,balance,type,status,create_time,other) 
        values(#{id},#{balance},#{type},#{status},#{createTime},#{other})
    </insert>

    <!-- 将GiftCard中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyGiftCard" parameterType="org.jiumao.wechatMall.entity.GiftCard">
        insert into gift_card
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="balance != null">balance,</if>
            <if test="type != null">type,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="other != null">other,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="balance != null"> #{balance},</if>
            <if test="type != null"> #{type},</if>
            <if test="status != null"> #{status},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="other != null"> #{other},</if>
        </trim>
    </insert>

    <!-- 通过GiftCard的id将数据库表中对应的数据删除-->
    <delete id="deleteGiftCardById" parameterType="java.lang.Long">
        delete from gift_card
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将GiftCard对应的数据库表的数据删除-->
    <delete id="deleteGiftCard" parameterType="org.jiumao.wechatMall.common.Assist">
        delete from gift_card
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过GiftCard的id将GiftCard的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateGiftCardById" parameterType="org.jiumao.wechatMall.entity.GiftCard">
        update gift_card set
            balance=#{balance}
            ,type=#{type}
            ,status=#{status}
            ,create_time=#{createTime}
            ,other=#{other}
        where id=#{id}
    </update>

    <!-- 通过GiftCard的id将GiftCard中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyGiftCardById" parameterType="org.jiumao.wechatMall.entity.GiftCard">
        update gift_card
        <set>
            <if test="balance != null">
                balance=#{balance},
            </if>
            <if test="type != null">
                type=#{type},
            </if>
            <if test="status != null">
                status=#{status},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="other != null">
                other=#{other},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将GiftCard中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateGiftCard" parameterType="map">
        update gift_card
        <set>
                id=#{enti.id},
                balance=#{enti.balance},
                type=#{enti.type},
                status=#{enti.status},
                create_time=#{enti.createTime},
                other=#{enti.other},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将GiftCard中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyGiftCard" parameterType="map">
        update gift_card
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.balance != null">
                balance=#{enti.balance},
            </if>
            <if test="enti.type != null">
                type=#{enti.type},
            </if>
            <if test="enti.status != null">
                status=#{enti.status},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.other != null">
                other=#{enti.other},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>