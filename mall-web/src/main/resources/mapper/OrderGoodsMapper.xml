<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jiumao.wechatMall.dao.OrderGoodsDao">
    <!-- OrderGoods的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_OrderGoods_Map" type="org.jiumao.wechatMall.entity.OrderGoods">
        <id column="id" property="id" />
        <result column="order_id" property="orderId" />
        <result column="good_id" property="goodId" />
        <result column="num" property="num" />
        <result column="price" property="price" />
        <result column="sale_price" property="salePrice" />
        <result column="name" property="name" />
        <result column="classification" property="classification" />
        <result column="total_price" property="totalPrice" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:order_goods的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="order_goods_Column">
        order_goods.id as id
        ,order_goods.order_id as order_id
        ,order_goods.good_id as good_id
        ,order_goods.num as num
        ,order_goods.price as price
        ,order_goods.sale_price as sale_price
        ,order_goods.name as name
        ,order_goods.classification as classification
        ,order_goods.total_price as total_price
    </sql>

    <!--获得类名为:OrderGoods对应的数据库表的数据总行数 -->
    <select id="getOrderGoodsRowCount" parameterType="org.jiumao.wechatMall.common.Assist" resultType="java.lang.Long">
        select count(id) from order_goods
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:OrderGoods对应数据库中表的数据集合 -->
    <select id="selectOrderGoods" parameterType="org.jiumao.wechatMall.common.Assist"  resultMap="result_OrderGoods_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="order_goods_Column" /> 
            </otherwise>
        </choose>
        from order_goods
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM order_goods
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=order_goods.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个OrderGoods对象,以参数OrderGoods对象中不为空的属性作为条件进行查询-->
    <select id="selectOrderGoodsByObj" parameterType="org.jiumao.wechatMall.entity.OrderGoods" resultMap="result_OrderGoods_Map">
        select 
            <include refid="order_goods_Column" /> 
        from order_goods
        <where>
            <if test="totalPrice != null "> and order_goods.total_price = #{totalPrice}</if>
            <if test="classification != null "> and order_goods.classification = #{classification}</if>
            <if test="name != null "> and order_goods.name = #{name}</if>
            <if test="salePrice != null "> and order_goods.sale_price = #{salePrice}</if>
            <if test="price != null "> and order_goods.price = #{price}</if>
            <if test="num != null "> and order_goods.num = #{num}</if>
            <if test="goodId != null "> and order_goods.good_id = #{goodId}</if>
            <if test="orderId != null "> and order_goods.order_id = #{orderId}</if>
            <if test="id != null "> and order_goods.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过OrderGoods的id获得对应数据库中表的数据对象-->
    <select id="selectOrderGoodsById" parameterType="java.lang.Object" resultMap="result_OrderGoods_Map">
        select 
            <include refid="order_goods_Column" /> 
        from order_goods
        where order_goods.id = #{id}
    </select> 

    <!-- 将OrderGoods插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertOrderGoods" parameterType="org.jiumao.wechatMall.entity.OrderGoods">
        insert into order_goods(id,order_id,good_id,num,price,sale_price,name,classification,total_price) 
        values(#{id},#{orderId},#{goodId},#{num},#{price},#{salePrice},#{name},#{classification},#{totalPrice})
    </insert>

    <!-- 将OrderGoods中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyOrderGoods" parameterType="org.jiumao.wechatMall.entity.OrderGoods">
        insert into order_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="goodId != null">good_id,</if>
            <if test="num != null">num,</if>
            <if test="price != null">price,</if>
            <if test="salePrice != null">sale_price,</if>
            <if test="name != null">name,</if>
            <if test="classification != null">classification,</if>
            <if test="totalPrice != null">total_price,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="orderId != null"> #{orderId},</if>
            <if test="goodId != null"> #{goodId},</if>
            <if test="num != null"> #{num},</if>
            <if test="price != null"> #{price},</if>
            <if test="salePrice != null"> #{salePrice},</if>
            <if test="name != null"> #{name},</if>
            <if test="classification != null"> #{classification},</if>
            <if test="totalPrice != null"> #{totalPrice},</if>
        </trim>
    </insert>

    <!-- 通过OrderGoods的id将数据库表中对应的数据删除-->
    <delete id="deleteOrderGoodsById" parameterType="java.lang.Object">
        delete from order_goods
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将OrderGoods对应的数据库表的数据删除-->
    <delete id="deleteOrderGoods" parameterType="org.jiumao.wechatMall.common.Assist">
        delete from order_goods
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过OrderGoods的id将OrderGoods的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateOrderGoodsById" parameterType="org.jiumao.wechatMall.entity.OrderGoods">
        update order_goods set
            order_id=#{orderId}
            ,good_id=#{goodId}
            ,num=#{num}
            ,price=#{price}
            ,sale_price=#{salePrice}
            ,name=#{name}
            ,classification=#{classification}
            ,total_price=#{totalPrice}
        where id=#{id}
    </update>

    <!-- 通过OrderGoods的id将OrderGoods中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyOrderGoodsById" parameterType="org.jiumao.wechatMall.entity.OrderGoods">
        update order_goods
        <set>
            <if test="orderId != null">
                order_id=#{orderId},
            </if>
            <if test="goodId != null">
                good_id=#{goodId},
            </if>
            <if test="num != null">
                num=#{num},
            </if>
            <if test="price != null">
                price=#{price},
            </if>
            <if test="salePrice != null">
                sale_price=#{salePrice},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="classification != null">
                classification=#{classification},
            </if>
            <if test="totalPrice != null">
                total_price=#{totalPrice},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将OrderGoods中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateOrderGoods" parameterType="map">
        update order_goods
        <set>
                id=#{enti.id},
                order_id=#{enti.orderId},
                good_id=#{enti.goodId},
                num=#{enti.num},
                price=#{enti.price},
                sale_price=#{enti.salePrice},
                name=#{enti.name},
                classification=#{enti.classification},
                total_price=#{enti.totalPrice},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将OrderGoods中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyOrderGoods" parameterType="map">
        update order_goods
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.orderId != null">
                order_id=#{enti.orderId},
            </if>
            <if test="enti.goodId != null">
                good_id=#{enti.goodId},
            </if>
            <if test="enti.num != null">
                num=#{enti.num},
            </if>
            <if test="enti.price != null">
                price=#{enti.price},
            </if>
            <if test="enti.salePrice != null">
                sale_price=#{enti.salePrice},
            </if>
            <if test="enti.name != null">
                name=#{enti.name},
            </if>
            <if test="enti.classification != null">
                classification=#{enti.classification},
            </if>
            <if test="enti.totalPrice != null">
                total_price=#{enti.totalPrice},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>